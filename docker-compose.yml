services:
  app:
    image: node:20-alpine
    working_dir: /usr/src/app
    volumes:
      - ./:/usr/src/app
    command: sh -c "npm run dev"
    env_file: .env
    ports: ["5433:5432"]   # host:container
    # depends_on:
    #   postgres:
    #     condition: service_healthy
    #   mysql:
    #     condition: service_healthy
    #   mongo:
    #     condition: service_started   # mongosh pode n√£o estar na imagem base
    #   redis:
    #     condition: service_healthy
    profiles: ["app"]

  postgres:
    image: postgres:16-alpine
    environment:
      POSTGRES_USER: ${POSTGRES_USER:-postgres}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-postgres}
      POSTGRES_DB: ${POSTGRES_DB:-playground}
    # ports: ["5432:5432"]
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $${POSTGRES_USER}"]
      interval: 5s
      timeout: 3s
      retries: 10
    volumes:
      - pgdata:/var/lib/postgresql/data
    profiles: ["core"]

  mysql:
    image: mysql:8
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD:-root}
      MYSQL_DATABASE: ${MYSQL_DATABASE:-playground}
      MYSQL_USER: ${MYSQL_USER:-app}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD:-app}
    ports: ["3307:3306"]
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "127.0.0.1"]
      interval: 5s
      timeout: 3s
      retries: 10
    volumes:
      - mysqldata:/var/lib/mysql
    profiles: ["core"]

  mongo:
    image: mongo:7
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_USERNAME:-root}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_PASSWORD:-root}
    ports: ["27018:27017"]
    # healthcheck do Mongo varia conforme a imagem; deixando simples
    volumes:
      - mongodb:/data/db
    profiles: ["core"]

  redis:
    image: redis:7-alpine
    command: ["redis-server", "--appendonly", "yes"]
    ports: ["6380:6379"]     # <- publica no host (6380)
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 3s
      retries: 20
    volumes:
      - redisdata:/data
    profiles: ["core"]


  mssql:
    image: mcr.microsoft.com/mssql/server:2022-latest
    environment:
      ACCEPT_EULA: "Y"
      SA_PASSWORD: ${MSSQL_SA_PASSWORD:-YourStrong!Passw0rd}
    # ports: ["1433:1433"]
    healthcheck:
      test: ["CMD", "/opt/mssql-tools/bin/sqlcmd", "-S", "localhost", "-U", "sa", "-P", "$${SA_PASSWORD}", "-Q", "SELECT 1"]
      interval: 10s
      timeout: 5s
      retries: 30
    profiles: ["mssql"]

volumes:
  pgdata:
  mysqldata:
  mongodb:
  redisdata: